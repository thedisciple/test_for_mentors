'''
Проверка корректности скобочных групп — это задача, в которой дана строка,
которая содержит в себе открывающиеся и закрывающиеся скобки
(например, ( и ) ), а так же другие символы.

Цель — проверить, верно ли расставлены скобки в строке.
Для решения задачи реализовать Стек или Очередь Python
(самостоятельно решить, какая структура подходит,
реализовать класс, не используя встроенные модули),
покрыть код комментариями.
'''
'''
Cтек будет более удобен, так как мы должны проверять,
что последняя открывающая скобка соответствует первой
закрывающей скобке.
'''

class Stack:
    def __init__(self):
        self.items = []

    def is_empty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[-1]

    def size(self):
        return len(self.items)
    
'''
Теперь мы можем использовать этот стек для проверки корректности
скобочных групп. Вот пример функции, которая принимает строку и
возвращает True, если скобки расставлены корректно, и False в
противном случае:
'''

def is_valid(string):
    stack = Stack()
    for char in string: # Проходим по каждому символу в строке.
        if char in '([{': # Если символ является открывающей скобкой, мы добавляем его в стек.
            stack.push(char)
        # Если символ является закрывающей скобкой, мы проверяем,
        # соответствует ли он последней открывающей скобке в стеке.
        elif char in ')]}':
            if stack.is_empty():
                return False
            if char == ')' and stack.peek() == '(':
                stack.pop()
            elif char == ']' and stack.peek() == '[':
                stack.pop()
            elif char == '}' and stack.peek() == '{':
                stack.pop()
            else:
                return False
    return stack.is_empty() # возвращаем True если проход по строке был "успешным".
